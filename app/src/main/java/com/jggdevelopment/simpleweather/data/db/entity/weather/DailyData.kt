package com.jggdevelopment.simpleweather.data.db.entity.weather


import androidx.room.ColumnInfo

data class DailyData(
    @ColumnInfo(name = "apparentTemperatureHigh")
    val apparentTemperatureHigh: Double,
    @ColumnInfo(name = "apparentTemperatureHighTime")
    val apparentTemperatureHighTime: Int,
    @ColumnInfo(name = "apparentTemperatureLow")
    val apparentTemperatureLow: Double,
    @ColumnInfo(name = "apparentTemperatureLowTime")
    val apparentTemperatureLowTime: Int,
    @ColumnInfo(name = "apparentTemperatureMax")
    val apparentTemperatureMax: Double,
    @ColumnInfo(name = "apparentTemperatureMaxTime")
    val apparentTemperatureMaxTime: Int,
    @ColumnInfo(name = "apparentTemperatureMin")
    val apparentTemperatureMin: Double,
    @ColumnInfo(name = "apparentTemperatureMinTime")
    val apparentTemperatureMinTime: Int,
    @ColumnInfo(name = "cloudCover")
    val cloudCover: Double,
    @ColumnInfo(name = "dewPoint")
    val dewPoint: Double,
    @ColumnInfo(name = "humidity")
    val humidity: Double,
    @ColumnInfo(name = "icon")
    val icon: String,
    @ColumnInfo(name = "moonPhase")
    val moonPhase: Double,
    @ColumnInfo(name = "ozone")
    val ozone: Double,
    @ColumnInfo(name = "precipIntensity")
    val precipIntensity: Double,
    @ColumnInfo(name = "precipIntesityMax")
    val precipIntensityMax: Double,
    @ColumnInfo(name = "precipIntensityMaxTime")
    val precipIntensityMaxTime: Int,
    @ColumnInfo(name = "precipProbability")
    val precipProbability: Double,
    @ColumnInfo(name = "precipType")
    val precipType: String,
    @ColumnInfo(name = "pressure")
    val pressure: Double,
    @ColumnInfo(name = "summary")
    val summary: String,
    @ColumnInfo(name = "sunriseTime")
    val sunriseTime: Int,
    @ColumnInfo(name = "sunsetTime")
    val sunsetTime: Int,
    @ColumnInfo(name = "temperatureHigh")
    val temperatureHigh: Double,
    @ColumnInfo(name = "temperatureHighTime")
    val temperatureHighTime: Int,
    @ColumnInfo(name = "temperatureLow")
    val temperatureLow: Double,
    @ColumnInfo(name = "temperatureLowTime")
    val temperatureLowTime: Int,
    @ColumnInfo(name = "temperatureMax")
    val temperatureMax: Double,
    @ColumnInfo(name = "temperatureMaxTime")
    val temperatureMaxTime: Int,
    @ColumnInfo(name = "temperatureMin")
    val temperatureMin: Double,
    @ColumnInfo(name = "temperatureMinTime")
    val temperatureMinTime: Int,
    @ColumnInfo(name = "apparentTemperatureHigh")
    val time: Int,
    @ColumnInfo(name = "apparentTemperatureHigh")
    val uvIndex: Int,
    @ColumnInfo(name = "apparentTemperatureHigh")
    val uvIndexTime: Int,
    @ColumnInfo(name = "apparentTemperatureHigh")
    val visibility: Double,
    @ColumnInfo(name = "apparentTemperatureHigh")
    val windBearing: Int,
    @ColumnInfo(name = "apparentTemperatureHigh")
    val windGust: Double,
    @ColumnInfo(name = "apparentTemperatureHigh")
    val windGustTime: Int,
    @ColumnInfo(name = "apparentTemperatureHigh")
    val windSpeed: Double
)